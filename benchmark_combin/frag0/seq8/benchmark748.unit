Reach([x,y,t,k,m,z,w,w1,w2,w3,w4,s,v1,v2,v3,v4,v5,p1,p2,choose,zero,one,two],[f,h,ran],[x])
init{
 }
assume(x = y);
assume(zero != one);
assume(zero != two);
assume(one != two);
if(choose = zero)then{
if(s=v4)then{

 x := ran(t);
 y := ran(t);
 while(w1 != w2){
    x := f(x);
    y := f(y);
    w1 := ran(w1)
  }

  }else{
 skip 
};
 while (x != t){
        x := f(x);
        y := f(y)
    }
;
if(s=v4)then{
  while(w1 != w2){
    if(x != y)then{
       x := f(x)
     }else{
       skip
     };
   w1 := ran(w1)
  }

  }else{
 skip 
};
  while(x = y){
  
    if(w1 = w2)then{
       x := f(x)
     }else{
       x := h(x)
     };
   w1 := h(w1)
  }
}else{
  skip
};

if(choose = one)then{
if(s=v1)then{

 x := ran(t);
 y := ran(t);
 while(w1 != w2){
    x := f(x);
    y := f(y);
    w1 := ran(w1)
  }

  }else{
 skip 
};
if(s=v2)then{
  assume(z = w);
  while (w1 != w2){
    if(w3 != w4)then{
        x := f(x);      
        y := f(y)
     }else{
       w := h(w);
       z := h(z)
     };
    w1 := ran(w1);
    w3 := ran(w3)
  }

  }else{
 skip 
};

  assume(w1 != w2);
  while(w1 != w2){
     assume(x != y)
   }
}else{
  skip
};

if(choose != zero)then{
   if(choose != one)then{
             assume(x = y)
    }else{
      skip
}
 }else{
  skip
}
;
assert(x = y)
